
//! Autogenerated weights for `pallet_airdrop`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-03-31, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/ice-node
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_airdrop
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --raw=raw.json
// --output
// ./airdrop_weights.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_airdrop`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_airdrop::WeightInfo for WeightInfo<T> {
	// Storage: Airdrop PendingClaims (r:0 w:1)
	fn remove_from_pending_queue(_b: u32, u: u32, ) -> Weight {
		(55_864_000 as Weight)
			// Standard Error: 60_000
			.saturating_add((133_000 as Weight).saturating_mul(u as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Airdrop PendingClaims (r:1 w:1)
	// Storage: Airdrop IceSnapshotMap (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn complete_transfer(_b: u32, _u: u32, ) -> Weight {
		(126_916_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: System Account (r:1 w:1)
	fn donate_to_creditor(_x: u32, ) -> Weight {
		(94_032_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Airdrop IceSnapshotMap (r:1 w:0)
	// Storage: Airdrop PendingClaims (r:1 w:2)
	fn register_failed_claim(_b: u32, u: u32, ) -> Weight {
		(74_756_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((1_000 as Weight).saturating_mul(u as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Airdrop IceSnapshotMap (r:1 w:1)
	// Storage: Airdrop PendingClaims (r:0 w:1)
	fn claim_request() -> Weight {
		(280_534_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Airdrop ProcessedUpto (r:0 w:1)
	fn update_processed_upto_counter(_b: u32, ) -> Weight {
		(41_319_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Airdrop OffchainAccount (r:1 w:1)
	fn set_offchain_account() -> Weight {
		(61_664_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Airdrop IceSnapshotMap (r:1 w:1)
	// Storage: Airdrop PendingClaims (r:0 w:1)
	fn force_claim_request(_u: u32, ) -> Weight {
		(57_138_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
