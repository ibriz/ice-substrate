name: Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/README.md"

env:
  BUILD_PROFILE: debug
  RUST_TOOLCHAIN: nightly-2022-10-25

jobs:
  clean-up-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        # Only cancel non-master branch runs
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  e2e-tests:
    runs-on: ubuntu-latest
    env:
      SCCACHE_CACHE_SIZE: "50G"
      CARGO_INCREMENTAL: 0
    needs:
      - clean-up-actions

    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: wasm32-unknown-unknown
          override: true

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          default: true
          profile: minimal
          target: wasm32-unknown-unknown
          toolchain: stable

      - name: Install WASM target (for runtime building)
        shell: bash
        run: rustup target add wasm32-unknown-unknown --toolchain ${{ env.RUST_TOOLCHAIN }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build optimized binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Binary executable
        shell: bash
        run: chmod +x ./target/release/ice-node

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Run evm ts tests
        run: |
          npm install -g yarn
          cd ts-tests/evm
          yarn install
          yarn run build
          yarn run test

      - name: Run ink ts tests
        env:
          END_USER_WALLET_1_URI: ${{ secrets.TEST_INK_WALLET_SEED_1 }}
          END_USER_WALLET_2_URI: ${{ secrets.TEST_INK_WALLET_SEED_2 }}
          END_USER_WALLET_3_URI: ${{ secrets.TEST_INK_WALLET_SEED_3 }}
        run: |
          mv ./target/release/ice-node ./ts-tests/ink/assets
          cd ts-tests/ink
          npm install --force
          npm run test:server
